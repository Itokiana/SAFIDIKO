{"version":3,"sources":["cinfig.js","components/admin/dashboard/index.js","components/admin/dashboard/voter.js","components/admin/dashboard/resultat.js","components/admin/dashboard/addVoter.js","components/admin/dashboard/addCandidat.js","components/admin/dashboard/upload.js","components/admin/index.js","components/layouts/login.js","components/layouts/index.js","components/sondages/index.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","Dashboard","props","context","state","voters","results_voters","session_vote","find","show","result_qr","notifyError","toast","warn","position","POSITION","TOP_CENTER","notifyOK","info","handleInputChange","e","setState","target","name","value","headers","localStorage","getItem","axios","get","then","res","data","catch","error","console","log","handleCheck","_id","email","post","voter","$oid","handleScan","handleError","err","bind","setTimeout","session_vote_id","handleClose","className","to","onClick","Form","Control","type","id","onChange","this","placeholder","htmlFor","scope","map","index","key","cin","last_name","first_name","voted","disabled","Modal","onHide","Header","closeButton","Title","Body","delay","onError","onScan","style","width","Footer","Button","variant","Component","Voter","nom","prenom","candidates","session_id","voter_id","handleVoter","candidate","renderData","setInterval","first_name_voter","last_name_voter","src","avatar","alt","number","Resultat","general_stats","participation","total_voter","getData","results","length","g","i","border","height","candidate_last_name","candidate_first_name","candidate_number","nb_votes","percent","labels","datasets","label","backgroundColor","borderColor","borderWidth","AddVoter","handleSubmit","preventDefault","created_voter","history","push","onSubmit","required","autoFocus","AddCandidat","created_candidate","Upload","handleToggle","isShow","logout","open","callLogout","isAuth","appMount","routeAdmin","exact","path","component","DashboardScreen","VoterScreen","ResultScreen","AddVoterScreen","AddCandidatScreen","UploadScreen","window","location","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","FormLogin","password","msg_ko","open_login","notify","TOP_LEFT","handleReset","trim","session","response","login","setItem","jwt","Collapse","in","Home","Sondages","comment","file","sondages","param","FormData","append","success","_onchange","files","getSondages","url_file","as","sondage","class","candidate_name","voter_name","App","Promise","resolve","reject","clear","fallback","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0304139a.chunk.js","sourcesContent":["// api enligne\nconst BASE_URL = ['https://safidiko.herokuapp.com'];\n\n// dev\n// const BASE_URL = ['http://127.0.0.1:3000'];\nexport default BASE_URL;\n","import React, { Component } from 'react';\nimport BASE_URL from '../../../cinfig';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Form, Modal, Button } from 'react-bootstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FaQrcode } from \"react-icons/fa\";\nimport QrReader from 'react-qr-reader'\n\nclass Dashboard extends Component {\n    state = {\n        voters: [],\n        results_voters: [],\n        session_vote: [],\n        find: \"\",\n        show: false,\n        result_qr: \"No result\"\n    }\n    \n    constructor(props, context) {\n        super(props, context);\n        this.handleCheck = this.handleCheck.bind(this);        \n        \n    }\n    \n    notifyError = () => {\n        toast.warn(\"Isoloir Occupé\", {\n            position: toast.POSITION.TOP_CENTER\n            });\n    };\n    notifyOK = () => {\n        toast.info(\"l'électeur peut voter !\", {\n            position: toast.POSITION.TOP_CENTER\n            });\n    };\n\n    componentDidMount() {\n        setTimeout(() => {\n            if(\"token\" in localStorage) {\n                const Authorization = localStorage.getItem('token');\n                const headers = {\n                    'Content-Type': 'application/json',\n                    'Authorization': Authorization,\n                };\n    \n                axios.get(`${BASE_URL}/api/voters/`, { headers })\n                    .then(res => {\n                        const voters = res.data;\n                        this.setState({ voters: voters });\n                    })\n                    .catch(error => {\n                        console.log(error);\n                    });      \n            }\n        }, 2000);\n        \n        \n    }\n\n    handleInputChange = e => {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n\n        const Authorization = localStorage.getItem('token');\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': Authorization,\n        };\n        axios.get(`${BASE_URL}/api/voters/${e.target.value}`, { headers })\n            .then(res => {\n                const results_voters = res.data;\n                this.setState({ results_voters: results_voters });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    };\n\n      handleCheck = (_id) => e => {\n\n        if(\"token\" in localStorage) {\n            const Authorization = localStorage.getItem('token');\n            const headers = {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n            };\n            const email = localStorage.getItem('email');\n            axios.post(`${BASE_URL}/api/session_vote/begin`, {email:email, voter:_id}, {headers} )\n                .then( res  => {\n                    if(res.data.session_vote.$oid){\n                        this.notifyOK();\n                    } else{\n                        this.notifyError();\n                    }\n                })\n                .catch(error => {\n                    \n                })\n        }\n\n      } \n\n      getSessionVote () {\n        const Authorization = localStorage.getItem('token');\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': Authorization,\n        };\n        const email = localStorage.getItem('email');\n        axios.get(`${BASE_URL}/api/session_vote/check`, { email }, { headers })\n            .then(res => {\n                \n                if(res.session_vote_id){\n                    // this.setState({\n                    //     voters : [],\n                    //     results_voters : []\n                    // });\n                    console.log(localStorage.getItem('token'));\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n        }\n\n        handleScan = data => {\n            const Authorization = localStorage.getItem('token');\n            const headers = {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n            };\n            if (data) {\n\n                axios.get(`${BASE_URL}/api/voters/${data}`, { headers })\n                    .then(res => {\n                        const results_voters = res.data;\n                        this.setState({ \n                            find : data,\n                            results_voters: results_voters,\n                            show : false,\n                        });\n                    })\n                    .catch(error => {\n                        console.log(error);\n                    });\n\n            }\n        }\n\n        handleError = err => {\n            console.error(err)\n        }\n        \n    \n    render() {\n\n        const handleClose = () => \n            this.setState({\n                show: false\n            });\n        const handleShow = () => \n            this.setState({\n                show: true\n            });\n\n        return (\n\n            <div className=\"mx-lg-5 mx-md-5 mx-2\">\n                <div className=\"card border-0 shadow my-5\">\n                    <div className=\"card-body p-5\">\n                        <div className=\"d-flex justify-content-between  mb-5\">\n                            <h1 className=\"font-weight-light\">\n                                Liste des Electeurs / &nbsp;\n                                <Link className=\"btn btn-outline-primary\" to=\"/dashboard/ajouterElecteur\">Ajouter Electeur</Link>\n                            </h1>\n\n                            <button className=\"btn btn-outline-secondary\" onClick={handleShow}> \n                                <FaQrcode/> qrCode\n                            </button>\n                        </div>\n                    <div className=\"form-label-group\">\n                        <Form.Control type=\"text\" name=\"find\" id=\"inputPassword\" onChange={ this.handleInputChange } value={ this.state.find } className=\"form-control\" placeholder=\"Rechercher ...\" />\n                        <label htmlFor=\"inputPassword\">Rechercher ...</label>\n                    </div>\n                    <div className=\"table-responsive\">\n\n                    \n                    <table className=\"table table-borderless\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">CIN</th>\n                            <th scope=\"col\">NOM</th>\n                            <th scope=\"col\">Prénom</th>\n                            <th scope=\"col\"> - </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            ( this.state.find === \"\" ) ? \n\n                            this.state.voters.map((voter, index) =>\n                                \n                                <tr key={index} className=\"animated fadeIn\">\n                                    <th scope=\"row\">{ voter.cin }</th>\n                                    <td>{ voter.last_name }</td>\n                                    <td>{ voter.first_name }</td>\n                                    <td>\n                                        <div className=\"text-left\">\n                                            {(voter.voted === 1) ?\n                                                <button type=\"button\" disabled className=\"btn btn-outline-secondary\">A déja voter</button>\n                                            :     \n                                                <button type=\"button\" onClick={this.handleCheck(voter._id.$oid)} className=\"btn btn-outline-primary\">Check</button>\n                                            }\n                                        </div>\n                                    </td>\n                                </tr>\n                            )\n                            :\n                            this.state.results_voters.map((voter, index) =>\n                                <tr key={index}>\n                                <th scope=\"row\">{ voter.cin }</th>\n                                <td>{ voter.last_name }</td>\n                                <td>{ voter.first_name }</td>\n                                <td>                                    \n                                        <div className=\"text-left\">\n                                            {(voter.voted === 1) ?\n                                                <button type=\"button\" disabled className=\"btn btn-outline-secondary\">A déja voter</button>\n                                            :     \n                                                <button type=\"button\" onClick={this.handleCheck(voter._id.$oid)} className=\"btn btn-outline-primary\">Check</button>\n                                            }\n                                        </div>\n                                </td>\n                                </tr>\n                            )\n                        }\n                        </tbody>\n                        </table>\n                        </div>\n                    <div className=\"my-5\"></div>\n                    {/* <p className=\"lead mb-0\">You've reached the end!</p> */}\n                    </div>\n                </div>\n                <ToastContainer />\n\n                {/* Modal qrCode */}\n                <Modal show={this.state.show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                    <Modal.Title>Scanne qrCode</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    <QrReader\n                        delay={300}\n                        onError={this.handleError}\n                        onScan={this.handleScan}\n                        style={{ width: '100%' }}\n                    />\n                    </Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Annuler\n                    </Button>\n                    </Modal.Footer>\n                </Modal>\n                {/* End Modal qrCode */}\n            </div>\n        );\n    }\n}\n\nexport default Dashboard","import React, { Component } from 'react';\nimport BASE_URL from '../../../cinfig';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Voter extends Component {\n    state = {\n        nom:\"\",\n        prenom:\"\",\n        candidates: [],\n        results_voters: [],\n        find: \"\",\n        session_id: \"\",\n        voter_id: \"\"\n    }\n\n    constructor(props, context) {\n        super(props, context);\n        this.handleVoter = this.handleVoter.bind(this);        \n\n    }\n\n    notifyOK = () => {\n        toast.info(\"Vote avec succès!\", {\n            position: toast.POSITION.TOP_CENTER\n            });\n    };\n\n    componentDidMount() {\n            this.renderData();\n            setInterval(() => {\n                this.renderData();\n            }, 5000);\n            \n    }\n\n    renderData() {\n            const Authorization = localStorage.getItem('token');\n            const headers = {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n            };\n            const email = localStorage.getItem('email');\n            axios.post(`${BASE_URL}/api/session_vote/check`, {email:email}, {headers} )\n                .then( res  => {\n                    if(res.data.session_vote === \"blank\"){\n                        this.setState({\n                            nom : \"\",\n                            prenom : \"\",\n                            candidates: []\n                        })\n                    } else{\n                        this.setState({\n                            nom : res.data.first_name_voter,\n                            prenom : res.data.last_name_voter,\n                            session_id : res.data.session_vote_id.$oid,\n                            voter_id : res.data.voter_id\n                        });\n\n                        axios.get(`${BASE_URL}/api/candidates/`, { headers })\n                            .then(res => {\n                                const candidates = res.data;\n                                this.setState({ candidates: candidates });\n                            })\n                            .catch(error => {\n                                console.log(error);\n                            });\n\n                    }\n                })\n                .catch(error => {\n                    \n                })\n    }\n\n    handleVoter = (id) => e => {\n        const Authorization = localStorage.getItem('token');\n            const headers = {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n            };\n            \n            axios.post(`${BASE_URL}/api/session_vote/end`, {session_vote:this.state.session_id, candidate:id, voter:this.state.voter_id}, {headers} )\n                .then( res  => {\n                    this.notifyOK();\n                })\n                .catch(error => {\n                    \n                })\n      } \n    \n    render() {\n        return (\n\n        <section className=\"\">\n            \n            <header className=\"text-center py-5 mb-4\">\n                <div className=\"container\">\n                    {(this.state.nom === \"\") ?\n                    <h1 className=\"font-weight-light text-white\">Aucun Electeur en attente</h1>\n                    :\n                    <h1 className=\"font-weight-light text-white\">{this.state.prenom+' '+this.state.nom}, choisir voter Candidat</h1>\n                    }\n                </div>\n            </header>\n\n            <div className=\"d-flex justify-content-center\">\n                \n                <div className=\"col-md-10 col-10\">\n                    <div className=\"row\">\n                        {this.state.candidates.map((candidate, index) =>\n                            <div className=\"col-xl-3 col-md-3 mb-4\" key={index}>\n                                <div className=\"card border-0 cardCandidat shadow\"\n                                    \n                                    onClick={this.handleVoter(candidate._id.$oid)}\n\n                                >\n                                    <img src={BASE_URL+'/avatar/'+candidate.avatar} className=\"card-img-top\" alt=\"...\" />\n                                    <div className=\"card-body text-center\">\n                                        <h5 className=\"card-title mb-0\">Numéro : {candidate.number}</h5>\n                                        <div className=\"card-text text-black-50\">{candidate.first_name+' '+candidate.last_name}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                        )}\n\n                    </div>\n                </div>\n            </div>\n            <ToastContainer />\n        </section>\n        );\n    }\n}\n\nexport default Voter","import React, { Component } from 'react';\nimport BASE_URL from '../../../cinfig';\nimport axios from 'axios';\nimport { Doughnut } from 'react-chartjs-2';\nimport 'chart.js';\nconst AVATAR_URL = 'https://safidiko.herokuapp.com/avatar/';\n\nclass Resultat extends Component {\n    state = {\n        general_stats: [],\n        participation: 0,\n        total_voter: 0,\n    }\n\n    componentDidMount() {\n         this.getData();\n         setInterval(() => {\n            this.getData();\n         }, 5000); \n        \n    }\n\n    getData() {\n        if(\"token\" in localStorage) {\n            const Authorization = localStorage.getItem('token');\n            const headers = {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n            };\n\n            axios.get(`${BASE_URL}/api/candidates/general_stat`, { headers })\n                .then(res => {\n                    if(res.data.results) {\n                        const general_stats = res.data.results;\n                        this.setState({ general_stats: general_stats, participation: res.data.participation, total_voter: res.data.total_voter });\n                    }\n                    else {\n                        this.setState({ general_stats: [] });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });      \n        }    \n    }\n    \n    render() {\n        \n        return (\n\n            <div className=\"mx-lg-5 mx-md-5 mx-2 bg-light\">\n                <ul className=\"list-group p-3\">\n                    <h1 className=\"font-weight-light mb-5\">Résultat global des votes</h1>\n                    <h3>Taux de participation: { this.state.participation }%</h3>\n                    {\n                        this.state.general_stats.length !== 0 ?\n                            this.state.general_stats.map((g,i) => (\n                                <li key={i} className=\"list-group-item p-3 mt-4 animated fadeIn\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4 text-center\">\n                                            <img className=\"shadow rounded rounded-circle\" style={ {border: \"4px solid\"} } height=\"150\" src={ AVATAR_URL + g.avatar } alt=\"\" />\n                                        </div>\n                                        <div className=\"col-4 candidat-name\">\n                                            <h3><b>{g.candidate_last_name +\" \"+ g.candidate_first_name}</b></h3>\n                                            <h4>Numéro: {g.candidate_number}</h4>\n                                            <h5><strong>Nombre de voie:</strong> {g.nb_votes}</h5>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <Doughnut \n                                                height={100} \n                                                data={{\"%Votant\": (100 - g.percent), \"%Voies\": g.percent}}\n                                                data={{\n                                                    labels: [(100 - g.percent) + '% Votant', g.percent+'% Voie'],\n                                                    datasets: [{\n                                                        label: '# of Votes',\n                                                        data: [(100 - g.percent), g.percent],\n                                                        backgroundColor: [\n                                                            'rgba(255, 99, 132, 0.5)',\n                                                            'rgba(54, 162, 235, 0.5)'\n                                                        ],\n                                                        borderColor: [\n                                                            'rgba(255, 99, 132, 1)',\n                                                            'rgba(54, 162, 235, 1)'\n                                                        ],\n                                                        borderWidth: 1\n                                                    }]\n                                                }}\n                                                colors={[\"rgba(0,0,0,.5)\",\"#28a745\"]} \n                                            />\n                                        </div>\n                                    </div>\n                                </li>\n                            ))\n                        : <span>Pending...</span>\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Resultat","import React, { Component } from 'react';\nimport BASE_URL from '../../../cinfig';\nimport axios from 'axios';\nimport { Form } from 'react-bootstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass AddVoter extends Component {\n    state = {\n        first_name : \"\",\n        last_name : \"\",\n        cin : \"\"\n    }\n    \n    constructor(props, context) {\n        super(props, context);  \n        this.handleSubmit = this.handleSubmit.bind(this);             \n    }\n\n    notifyOK = () => {\n        toast.info(\"Insertion avec succès!\", {\n            position: toast.POSITION.TOP_CENTER\n            });\n    };\n\n    componentDidMount() {\n        \n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        if(\"token\" in localStorage) {\n            const Authorization = localStorage.getItem('token');\n            const headers = {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n            };\n            const { first_name, last_name, cin } = this.state;\n            axios.post(`${BASE_URL}/api/voters/create`, { first_name, last_name, cin }, { headers })\n                .then(res => {\n                    if(res.data.created_voter === \"success\") {\n                       this.notifyOK();\n                       setTimeout(() => {\n                        this.props.history.push(\"/dashboard/\");\n                       }, 2000);\n                    }\n                    else {\n                        console.log('Error');\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });      \n        }    \n    }\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n          });\n        };\n    \n    render() {\n        \n        return (\n\n            <div className=\"px-5 py-5 mx-lg-5 mx-md-5 mx-2 bg-light\">\n                <h1 className=\"font-weight-light mb-5\">Insertion nouveau Electeur</h1>\n                \n                <div className=\"col-md-8 col-10\">\n                    <form className=\"form-create\" onSubmit={ this.handleSubmit }>\n                        <div className=\"form-label-group mb-5\">\n                            <Form.Control type=\"text\" name=\"first_name\" id=\"inputFirst_name\" onChange={ this.handleInputChange } value={ this.state.first_name } className=\"form-control\" placeholder=\"Prénom\" required autoFocus />\n                            <label htmlFor=\"inputFirst_name\">Prénom</label>\n                        </div>\n                        <div className=\"form-label-group mb-5\">\n                            <Form.Control type=\"text\" name=\"last_name\" id=\"inputLast_name\" onChange={ this.handleInputChange } value={ this.state.last_name } className=\"form-control\" placeholder=\"Nom\" required />\n                            <label htmlFor=\"inputLast_name\">Nom</label>\n                        </div>\n                        <div className=\"form-label-group mb-5\">\n                            <Form.Control type=\"text\" name=\"cin\" id=\"inputCin\" onChange={ this.handleInputChange } value={ this.state.cin } className=\"form-control\" placeholder=\"CIN\" required />\n                            <label htmlFor=\"inputCIN\">CIN</label>\n                        </div>\n                        <div className=\"text-right\">\n                            <button className=\"btn btn-secondary\" type=\"submit\">Valider</button>\n                        </div>\n                    </form>\n\n                </div>\n                <ToastContainer />\n            </div>\n        );\n    }\n}\n\nexport default AddVoter","import React, { Component } from 'react';\nimport BASE_URL from '../../../cinfig';\nimport axios from 'axios';\nimport { Form } from 'react-bootstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass AddCandidat extends Component {\n    state = {\n        first_name : \"\",\n        last_name : \"\",\n        number: \"\",\n        avatar: \"\"\n    }\n    \n    constructor(props, context) {\n        super(props, context);  \n        this.handleSubmit = this.handleSubmit.bind(this);             \n    }\n\n    notifyOK = () => {\n        toast.info(\"Insertion avec succès!\", {\n            position: toast.POSITION.TOP_CENTER\n            });\n    };\n\n    componentDidMount() {\n        \n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        if(\"token\" in localStorage) {\n            const Authorization = localStorage.getItem('token');\n            const headers = {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n            };\n            const { first_name, last_name, number, avatar } = this.state;\n            axios.post(`${BASE_URL}/api/candidates/create`, \n                { first_name:first_name, last_name:last_name, number:number }, { headers })\n                .then(res => {\n                    if(res.data.created_candidate === \"success\") {\n                       this.notifyOK();\n                       setTimeout(() => {\n                        this.props.history.push(\"/dashboard/\");\n                       }, 2000);\n                    }\n                    else {\n                        console.log('Error');\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });      \n        }    \n    }\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n          });\n        };\n    \n    render() {\n        \n        return (\n\n            <div className=\"px-5 py-5 mx-lg-5 mx-md-5 mx-2 bg-light\">\n                <h1 className=\"font-weight-light mb-5\">Insertion nouveau Candidat</h1>\n                \n                <div className=\"col-md-8 col-10\">\n                    <form className=\"form-create\" onSubmit={ this.handleSubmit }>\n                        <div className=\"form-label-group mb-5\">\n                            <Form.Control type=\"text\" name=\"first_name\" id=\"inputFirst_name\" onChange={ this.handleInputChange } value={ this.state.first_name } className=\"form-control\" placeholder=\"Prénom\" required autoFocus />\n                            <label htmlFor=\"inputFirst_name\">Prénom</label>\n                        </div>\n                        <div className=\"form-label-group mb-5\">\n                            <Form.Control type=\"text\" name=\"last_name\" id=\"inputLast_name\" onChange={ this.handleInputChange } value={ this.state.last_name } className=\"form-control\" placeholder=\"Nom\" required />\n                            <label htmlFor=\"inputLast_name\">Nom</label>\n                        </div>\n                        <div className=\"form-label-group mb-5\">\n                            <Form.Control type=\"number\" name=\"number\" id=\"inputNumber\" onChange={ this.handleInputChange } value={ this.state.number } className=\"form-control\" placeholder=\"number\" required />\n                            <label htmlFor=\"inputNumber\">NUMERO</label>\n                        </div>\n                        <div className=\"text-right\">\n                            <button className=\"btn btn-secondary\" type=\"submit\">Valider</button>\n                        </div>\n                    </form>\n\n                </div>\n                <ToastContainer />\n            </div>\n        );\n    }\n}\n\nexport default AddCandidat","import React, { Component } from 'react';\nimport BASE_URL from '../../../cinfig';\nimport axios from 'axios';\nimport { Form } from 'react-bootstrap';\nimport { ToastContainer, toast } from 'react-toastify';\n// import 'react-dropzone-uploader/dist/styles.css';\n// import Dropzone from 'react-dropzone-uploader';\n// import 'react-toastify/dist/ReactToastify.css';\n\nclass Upload extends Component {\n    state = {\n        number : \"\",\n\n    }\n    \n    constructor(props, context) {\n        super(props, context);  \n        // this.handleSubmit = this.handleSubmit.bind(this);             \n    }\n\n    notifyOK = () => {\n        toast.info(\"Insertion avec succès!\", {\n            position: toast.POSITION.TOP_CENTER\n            });\n    };\n\n    componentDidMount() {\n        \n    }\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n          });\n        };\n    \n    render() {\n        // const MyUploader = () => {\n        //     // specify upload params and url for your files\n        //     const getUploadParams = ({ meta }) => { return { url: 'https://47b00da9.ngrok.io/avatar/' } }\n            \n        //     // called every time a file's `status` changes\n        //     const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n            \n        //     // receives array of files that are done uploading when submit button is clicked\n        //     const handleSubmit = (files, allFiles) => {\n        //       console.log(files.map(f => f.meta))\n        //       allFiles.forEach(f => f.remove())\n        //     }\n          \n        //     return (\n        //       <Dropzone\n        //         getUploadParams={getUploadParams}\n        //         onChangeStatus={handleChangeStatus}\n        //         onSubmit={handleSubmit}\n        //         accept=\"image/*,audio/*,video/*\"\n        //       />\n        //     )\n        //   }\n        \n        return (\n\n            <div className=\"px-5 py-5 mx-lg-5 mx-md-5 mx-2 bg-light\">\n                <h1 className=\"font-weight-light mb-5\">Insertion nouveau Media</h1>\n                \n                <div className=\"col-md-8 col-10\">\n                    \n                        <div className=\"form-label-group mb-5\">\n                            <Form.Control type=\"number\" name=\"number\" id=\"inputNumber\" onChange={ this.handleInputChange } value={ this.state.number } className=\"form-control\" placeholder=\"number\" required />\n                            <label htmlFor=\"inputNumber\">NUMERO</label>\n                        </div>\n                        <div className=\"form-label-group mb-5\">\n                            {/* <MyUploader /> */}\n                        </div>\n\n                </div>\n                <ToastContainer />\n            </div>\n        );\n    }\n}\n\nexport default Upload","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { IoIosLock } from 'react-icons/io';\nimport { Link } from 'react-router-dom';\nimport DashboardScreen from './dashboard/index.js';\nimport VoterScreen from './dashboard/voter.js';\nimport ResultScreen from './dashboard/resultat.js';\nimport AddVoterScreen from './dashboard/addVoter.js';\nimport AddCandidatScreen from './dashboard/addCandidat.js';\nimport UploadScreen from './dashboard/upload.js';\nconst URL_VOTER = \"http://localhost:8000/#/dashboard/voter\";\nclass Dashboard extends Component {\n    constructor (props){\n      super(props);\n      this.logout = this.logout.bind(this);\n      this.handleToggle = this.handleToggle.bind(this);\n  \n      this.state = {\n        open: false,\n        isShow: true\n      };\n    }\n  \n    handleToggle = e => {\n        this.setState({\n            isShow: !this.state.isShow\n        });\n    }\n    logout () {\n      this.props.callLogout()\n      .then(() => {\n        \n      }); \n    \n    }\n  \n    componentDidMount () {\n      console.log(this.props); \n      if(this.props.isAuth === false && this.props.appMount === true) {\n        this.props.history.push(\"/login\");\n      }\n      if(this.props.isAuth === false && this.props.appMount === true) {\n        this.props.history.push(\"/login\");\n      }   \n    }\n  \n    // componentWillReceiveProps(nextProps) {\n    //   console.log(this.props);    \n    //   if(this.props.isAuth === false && nextProps.appMount === true) {\n    //       this.props.history.push(\"/login\");\n    //   }\n    //   if(nextProps.isAuth === false && this.props.appMount === true) {\n    //     this.props.history.push(\"/login\");\n    //   }\n    // }\n  \n    render() {\n      let routeAdmin;\n      routeAdmin = (\n        <Switch>\n            <Route\n              exact\n              path='/dashboard'\n              component = {DashboardScreen}\n            />\n            <Route\n              path='/dashboard/voter'\n              component = {VoterScreen}\n            /> \n\n            <Route\n              path='/dashboard/results'\n              component = {ResultScreen}\n            /> \n            <Route\n              path='/dashboard/ajouterElecteur'\n              component = {AddVoterScreen}\n            />\n            <Route\n              path='/dashboard/ajouterCandidat'\n              component = {AddCandidatScreen}\n            /> \n            <Route\n              path='/dashboard/upload'\n              component = {UploadScreen}\n            />    \n      </Switch> \n             \n      );\n      return (\n        <div>\n          { ( window.location.href === URL_VOTER ) ? \n            <span></span>\n          :\n          <nav className=\"navbar navbar-expand-md navbar-light bg-light static-top mb-5 shadow\">\n            <div className=\"container\">\n              <a className=\"navbar-brand\" href=\"/\"><span className=\"safid\">SAFIDI</span><span className=\"ko\">KO</span></a>\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                  </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item active\">\n                    <Link to=\"/dashboard/\" className=\"nav-link\">Accueil</Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to=\"/dashboard/voter\" className=\"nav-link\">Voter</Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to=\"/dashboard/results\" className=\"nav-link\">Résultats</Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to=\"/dashboard/ajouterCandidat\" className=\"nav-link\">Candidats</Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to=\"/login\" onClick={this.logout} className=\"nav-link\"><IoIosLock/> Déconnexion</Link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n          \n          }\n        <div>\n          {routeAdmin}\n        </div>\n        </div>              \n          \n      );\n    }\n  }\n  \n  export default Dashboard\n  ","import React, { Component } from 'react';\nimport { Form, Collapse } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../../assets/css/login.css';\nimport BASE_URL from '../../cinfig';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { IoIosPower } from \"react-icons/io\";\n\nclass FormLogin extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        isAuth: false,\n        msg_ko:\"\",\n        open_login : false\n      };\n    constructor (props){\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n    }\n\n    notify = () => {\n        toast.error(\"Identifiants invalides !\", {\n            position: toast.POSITION.TOP_LEFT\n          });\n    };\n\n    componentDidMount () {\n        // console.log(this.props);\n        if(this.props.isAuth === true){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    // componentWillReceiveProps(nextProps) {\n    //     if(nextProps.isAuth === true) {\n    //         this.props.history.push(\"/dashboard\");\n    //     }\n    // }\n\n    handleInputChange = e => {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      };\n      handleReset = () => {\n        this.setState({\n            email: \"\",\n            password: \"\"\n        });\n      };\n    handleSubmit = e => {\n        e.preventDefault();\n        if (this.state.email.trim() && \n            this.state.password.trim() \n            ) {\n                const { email, password } = this.state;\n                    // axios.post(`${BASE_URL}`, { email, password })\n                    axios.post(`${BASE_URL}/session/`, { session: { email, password } })\n\n                    .then(response => {\n                        if(response.data.session){\n                            this.props.login()\n                            .then((data) => { \n                                // window.localStorage.setItem('id',response.data.id);\n                                window.localStorage.setItem('token',response.data.session.jwt);\n                                // window.localStorage.setItem('expires',response.data.expires);\n                                window.localStorage.setItem('email',response.data.session.email);\n                                // window.localStorage.setItem('label',response.data.label);\n                                this.props.history.push(\"/dashboard\");\n                            });\n                        }\n                        \n                    })\n                    .catch(error => {\n                        // this.setState({ show: true, isAuth: false, msg_ko: \"Identifiant Error !\" });\n                        // console.log(\"koooooo\");\n                        this.notify();\n\n                        \n                    });\n            }   \n      };\n    render() {\n        const { open_login } = this.state;\n      return (\n        <div className=\"container\" id=\"gtc-login\">\n            <nav className=\"nav nav-pills nav-fill\">\n                <button type=\"button\" onClick={() => this.setState({ open_login: !open_login })} aria-expanded={open_login} className=\"nav-item btn btn-outline-light btn-lg mr-2\">\n                    Connexion\n                </button>\n                <Link to=\"/sondages\" className=\"nav-item btn btn-outline-dark btn-lg ml-2\">Sondages</Link>\n            </nav>\n            <Collapse in={this.state.open_login}>\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n                        <div className=\"card card-signin my-5\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-center\">Connexion</h5>\n                                <form className=\"form-signin\" onSubmit={ this.handleSubmit }>\n                                <div className=\"form-label-group\">\n                                    <Form.Control type=\"email\" name=\"email\" id=\"inputEmail\" onChange={ this.handleInputChange } value={ this.state.email } className=\"form-control\" placeholder=\"Email address\" required autoFocus />\n                                    <label htmlFor=\"inputEmail\">Adresse email</label>\n                                </div>\n                \n                                <div className=\"form-label-group\">\n                                    <Form.Control type=\"password\" name=\"password\" id=\"inputPassword\" onChange={ this.handleInputChange } value={ this.state.password } className=\"form-control\" placeholder=\"Password\" required />\n                                    <label htmlFor=\"inputPassword\">Mot de passe</label>\n                                </div>\n                \n                                <div className=\"custom-control custom-checkbox mb-3\">\n                                    <Form.Control type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                                    <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Se souvenir de moi</label>\n                                </div>\n                                <button className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\"><IoIosPower/> Se connecter</button>\n                                {/* <hr className=\"my-4\" />\n                                \n                                <button className=\"btn btn-lg btn-facebook btn-block text-uppercase\" type=\"reset\"><i className=\"fab fa-facebook-f mr-2\"></i> Sign in with Facebook</button> */}\n                                </form>\n                            </div>\n                            </div>\n                    </div>\n                </div>\n            </Collapse>\n            <ToastContainer />\n        </div>\n        );\n    }\n}\n\nexport default FormLogin;\n","import React,{ Component } from 'react';\n\nclass Home extends Component {\n\n    componentDidMount () {\n        console.log(this.props);\n        if(\"token\" in localStorage){\n            this.props.history.push(\"/dashboard\");\n        }else{\n            this.props.history.push(\"/login\");\n        }\n    }\n    render() {\n        return (\n            <span>ELECTORAL_MADA</span>\n        );\n    }\n}\n\nexport default Home","import React, { Component } from 'react';\nimport BASE_URL from '../../cinfig';\nimport axios from 'axios';\nimport { Form, Modal } from 'react-bootstrap';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom';\nimport { FaQrcode } from \"react-icons/fa\";\nimport QrReader from 'react-qr-reader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Sondages extends Component {\n    state = {\n        candidates : [],\n        candidate: \"\",\n        results_voters : [],\n        voter: \"\",\n        comment : \"\",\n        file: null,\n        sondages : [],\n        show: false,\n        result_qr: \"No result\"\n    }\n    \n    constructor(props, context) {\n        super(props, context);  \n        this.handleSubmit = this.handleSubmit.bind(this);             \n    }\n\n    notifyOK = () => {\n        toast.info(\"Succès!\", {\n            position: toast.POSITION.TOP_CENTER\n            });\n    };\n\n    componentDidMount() {\n\n        const headers = {\n            'Content-Type': 'application/json'\n        }\n        axios.get(`${BASE_URL}/api/candidates`, { headers })\n            .then(res => {\n                const candidates = res.data;\n                this.setState({ candidates: candidates });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n\n        this.getSondages();\n        setInterval(() => {\n            this.getSondages();\n        }, 5000);\n    }\n\n    getSondages() {\n        const headers = {\n            'Content-Type': 'application/json'\n        }\n        axios.get(`${BASE_URL}/surveys/`, { headers })\n            .then(res => {\n                const sondages = res.data;\n                this.setState({ sondages: sondages });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n\n    handleScan = data => {\n        if (data) {\n             \n        this.setState({\n                voter:data,\n                show: false,\n            })\n        }\n\n    }\n\n    handleError = err => {\n        console.error(err)\n    }\n  \n\n    handleSubmit = e => {\n        e.preventDefault();\n            const headers = {\n                'Content-Type': 'multipart/form-data',\n            };\n            let param = new FormData();\n            // param.set(\"voter\", this.state.voter);\n            // param.set(\"candidate\", this.state.candidate);\n            // param.set(\"comment\", this.state.comment);\n            param.append(\"file\", this.state.file);\n\n            const { voter, candidate, comment, file } = this.state;\n            console.log({ voter, candidate, comment, file });\n                axios.post(`${BASE_URL}/surveys/create`, \n                    param, { headers })\n                    .then(res => {\n                        if(res.data.success === \"ok\") {\n                            console.log('OKOKOKOKO--------');\n    \n                            this.setState({\n                                show: false,\n                            })\n                        }\n\n                    })\n                    .catch(error => {\n                        console.log(error);\n                    });        \n        \n    }\n\n    handleInputChange = e => {\n        // if (e.target.type == 'file')\n        this.setState({\n            [e.target.name]: e.target.value,\n          });\n    };\n\n    _onchange = e =>{\n        e.preventDefault();\n            const headers = {\n                'Content-Type': 'application/json',\n            };\n            let param = new FormData();\n\n            param.append(\"file\", e.target.files[0]);\n\n            const { voter, candidate, comment, file } = this.state;\n                axios.post(`${BASE_URL}/surveys/create`, \n                { voter:voter, candidate:candidate, comment:comment } , { headers })\n                    .then(res => {\n                        if(res.data.success === \"ok\") {\n                            axios.post(`${BASE_URL}/surveys/update`, \n                            param , { headers })\n                            .then(res => {\n                                this.notifyOK();\n                            })\n\n                            .catch(error => {\n                                console.log(error);\n                            }); \n                        }\n\n                    })\n                    .catch(error => {\n                        console.log(error);\n                    });   \n    }\n    \n    render() {\n        const url_file = BASE_URL+\"/surveys/media/\";\n        const handleClose = () => \n        this.setState({\n            show: false\n        });\n        const handleShow = () => \n            this.setState({\n                show: true\n        });\n        return (\n            <div className=\"px-5 py-5 mx-lg-5 mx-md-5 mx-2 bg-light my-5\">\n                <h1 className=\"font-weight-light mb-5\">\n                    Sondages \n                </h1>\n                <div className=\"col-md-12 col-12\">\n                    <form className=\"form-create\" onSubmit={this.handleSubmit} >\n                        <div className=\"row\">\n                            <div className=\" col-md-3 px-1 col-lg-3 col-12 form-label-group mb-5\">\n                                <Form.Control type=\"text\" name=\"comment\" id=\"inputFirst_name\" onChange={ this.handleInputChange } value={ this.state.first_name } className=\"form-control\" placeholder=\"Prénom\" required autoFocus />\n                                <label htmlFor=\"inputFirst_name\">Comment</label>\n                            </div>\n                            <div className=\"col-md-3 px-1 col-lg-3 col-12 form-label-group mb-5\">\n                                <Form.Control as=\"select\" name=\"candidate\" className=\"h-100\" value={this.state.candidate} onChange={this.handleInputChange} required>\n                                    <option value=\"\">Candidat</option>\n                                    {this.state.candidates.map((candidate, index) =>\n                                        <option key={ index } value={candidate._id.$oid}>\n                                            {candidate.last_name+' #'+candidate.number }\n                                        </option>\n                                    )}\n                                </Form.Control>\n                            </div>\n                            <div className=\" col-md-3 px-1 col-lg-3 col-12 form-label-group mb-5\" onClick={handleShow}> \n                                <Form.Control disabled type=\"text\" name=\"comment\" id=\"inputFirst_name\"  onChange={ this.handleInputChange } value={ this.state.voter } className=\"form-control\" placeholder=\"Prénom\" required autoFocus />\n                                <label htmlFor=\"inputFirst_name\">CIN</label>\n                            </div>\n                            <div className=\" col-md-3 px-1 col-lg-3 col-12 form-label-group mb-5\">\n                                <Form.Control type=\"file\" name=\"file\" id=\"inputLast_name\" onChange={ this._onchange } value={ this.state.file } className=\"form-control\" placeholder=\"Nom\" required />\n                                <label htmlFor=\"inputLast_name\">Ficher</label>\n                            </div>\n                        </div>\n                    </form>\n                    <div className=\"col-md-10 col-10\">\n                        <div className=\"row\">\n                    { (this.state.sondages.length !== 0) ?\n                    this.state.sondages.map((sondage, index) =>\n                                <div className=\"col-xl-3 col-md-3 mb-4\" key={index}>\n                                    <div class=\"card\">\n                                        <img src={url_file+sondage.id.$oid} class=\"card-img-top\"/>\n                                            <div class=\"card-body\">\n                                                <h5 class=\"card-title\">\n                                                    {sondage.candidate_name+' #'+sondage.candidate_number}\n                                                </h5>\n                                                <p class=\"card-text text-dark\">\n                                                    >> {sondage.comment}    \n                                                </p>\n                                                <i class=\"text-primary\">{sondage.voter_name}</i>\n                                            </div>\n                                    </div>\n                                </div>\n                    )\n                    :\n                    <small>Aucun Sondage</small>\n                }\n                        </div>\n                    </div>\n                    </div>\n                    <ToastContainer />\n                    {/* Modal qrCode */}\n                    <Modal show={this.state.show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                        <Modal.Title>Scanne qrCode</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                        <QrReader\n                            delay={300}\n                            onError={this.handleError}\n                            onScan={this.handleScan}\n                            style={{ width: '100%' }}\n                        />\n                        </Modal.Body>\n                        <Modal.Footer>\n\n                        </Modal.Footer>\n                    </Modal>\n                    {/* End Modal qrCode */}\n                </div>\n        );\n    }\n}\n\nexport default Sondages","import React, { Component , Suspense } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Dashboard from './components/admin/index.js';\n// import Header from './components/layouts/header.js';\nimport Login from './components/layouts/login';\n// import Register from './components/layouts/form_register.js';\n// import ForgotPassword from './components/layouts/forgot_password.js'\n// import ChangePassword from './components/layouts/change_pass.js'\nimport Home from './components/layouts/index';\nimport Sondages from './components/sondages/index.js';\n\n// const URL_WEBUI = \"https://accounts.blockchainmyart.org/#/webui\";\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props)\n    this.login = this.login.bind(this)\n    this.state = {isAuth : false , appMount : false}\n    this.callLogout = this.callLogout.bind(this)\n  }\n\n\n  login() {\n    return new Promise((resolve,reject) =>\n    {\n      setTimeout(() => {  this.setState({ isAuth: true }); resolve(true); }, 300)\n    });\n  }\n\n  componentDidMount() {\n    if('token' in window.localStorage) {\n      this.setState({ isAuth: true }); \n    }\n    this.setState({ appMount: true }); \n  }\n\n  callLogout() {\n    this.setState({isAuth : false});\n    console.log(\"______logout\");\n    \n    return new Promise((resolve,reject) => {\n        window.localStorage.clear();\n        resolve(true);\n    });\n  }\n\n  render() {\n    return (\n      <Suspense fallback=\"loading\">\n          <div className=\"content_main\">\n        <Router>\n            <Switch>\n            <Route\n              \n              path='/dashboard'\n              component={(props) => <Dashboard {...props} appMount={this.state.appMount} callLogout={this.callLogout} isAuth={this.state.isAuth} />}\n            /> \n            <Route\n              exact\n              path='/sondages'\n              component={(props) => <Sondages/>}\n            />    \n    \n              <Route\n                exact \n                path='/'\n                component={(props) => <Home {...props} login={this.login} isAuth={this.state.isAuth} />}\n              />\n    \n              <Route\n                exact\n                path='/login'\n                component={(props) => <Login {...props} login={this.login} isAuth={this.state.isAuth} />}\n              />\n            \n            {/* <Route\n              exact\n              path='/register'\n              component={(props) => <Register {...props} login={this.login} isAuth={this.state.isAuth} />}\n            /> */}\n        \n               \n            </Switch>\n        </Router>\n          </div>   \n          \n      </Suspense>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}